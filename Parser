using System.Text;

namespace DLLDumper;

public class Parser
{
    public string Input;
    private IEnumerable<char> splitters = new  List<char>()
    {
      ' ',
      '\t',
      '\r',
      '\n'
    };
    public List<string> Split()
    {
      return Input.Split((char[]?)splitters, StringSplitOptions.RemoveEmptyEntries).ToList();
    }
    public List<Request> Parse()
    {
        var requests = new List<Request>();
        var splitted = Split();
        var request = new Request();
        int bodyStartIndex;
        bool typeFilled = false;
        bool urlFilled = false;
        bool protocolFilled = false;

        for (int i = 0; i < splitted.Count ; i++)
        {
            if(splitted[i] == "###")    
            {        
             requests.Add(request);
             request = new Request();
             typeFilled = false;
             urlFilled = false;
             protocolFilled = false;
            }
            
            if(!typeFilled)
            {
                request.Type = splitted[i];
                typeFilled = true;
            }

            if(typeFilled && !urlFilled)
            {
                request.Url = splitted[i];
                urlFilled = true;
            }

            if(typeFilled && urlFilled)
            {
                request.protocol = splitted[i];
                protocolFilled = true;
            }
        
            if(splitted[i-1].ToCharArray().Last() == ':' && bodyStartIndex != 0)            
             request.Headers.Add($"{splitted[i-1]}{splitted[i]}");    

            if(splitted[i] == "{")            
                bodyStartIndex = i;

            if(splitted[i] == "}")
               request.Body = splitted[bodyStartIndex..i];
               bodyStartIndex = 0;
        }
        return requests;
    }   
}
